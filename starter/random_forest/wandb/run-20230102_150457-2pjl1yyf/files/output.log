2023-01-02 15:05:00,380 Downloading and reading train artifact
2023-01-02 15:05:01,832 Extracting target from dataframe
2023-01-02 15:05:01,833 Splitting train/val
2023-01-02 15:05:01,857 Setting up pipeline
2023-01-02 15:05:01,860 Fitting
/Users/philipherp/opt/anaconda3/envs/mlflow-984783334c15b85d4522fbb55abc5d1ecff40c51/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:425: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features='sqrt'` or remove this parameter as it is also the default value for RandomForestClassifiers and ExtraTreesClassifiers.
  warn(
2023-01-02 15:05:04,565 Scoring
/Users/philipherp/opt/anaconda3/envs/mlflow-984783334c15b85d4522fbb55abc5d1ecff40c51/lib/python3.10/site-packages/mlflow/models/signature.py:129: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input)
/Users/philipherp/opt/anaconda3/envs/mlflow-984783334c15b85d4522fbb55abc5d1ecff40c51/lib/python3.10/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")
[34m[1mwandb[39m[22m: Adding directory to artifact (/var/folders/xz/1n6z5vyx549flm33kdm1nwvc0000gn/T/tmp206l8fwc/model_export)... Done. 0.1s